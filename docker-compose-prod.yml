version: "3.6"

services:
  db:
    image: postgres
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - ./database:/var/lib/postgresql/data
      - ./backups:/backups
    restart: always
    networks:
      - db_link
  back:
    build:
      context: back
      dockerfile: Dockerfile
      target: production
    command: gunicorn galerie.wsgi:application --bind 0.0.0.0:8000
    expose:
      - 8000
    depends_on:
      - db
      - webinstaller
    volumes:
      - ./backups:/backups
      - bundles:/src/galerie/static/react
      - static_volume:/src/static/
      - media_volume:/src/media/
    restart: always
    environment:
      DB_HOST: $DB_HOST
      DB_PORT: $DB_PORT
      DB_NAME: $DB_NAME
      DB_USER: $DB_USER
      DB_PASSWORD: $DB_PASSWORD
      SECRET_KEY: $SECRET_KEY
      DEBUG: $DEBUG
      DOMAIN_NAME: $DOMAIN_NAME
      GUNICORN_NB_WORKERS: $GUNICORN_NB_WORKERS
    networks:
      - ping
      - db_link
      - nginx_link
  nginx:
    build: ./nginx
    ports:
      - $BACK_PORT:80
    depends_on:
      - back
    volumes:
      - static_volume:/src/static
      - media_volume:/src/media
    restart: always
    networks:
      - nginx_link
  webinstaller:
    build:
      context: ./
      dockerfile: ./webinstaller/Dockerfile
      target: production
    volumes:
      - bundles:/src/galerie/static/react
    networks:
      - ping

volumes:
  static_volume:
  media_volume:
  database:
  bundles:
    driver: local

networks:
  ping:
    driver: bridge
  db_link:
    driver: bridge
  nginx_link:
    driver: bridge